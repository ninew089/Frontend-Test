{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nfunction configureStore(initialState) {\n  const middleware = [];\n  const store = createStore(initialState, composeWithDevTools(applyMiddleware(...middleware)));\n  return store;\n}\n\nexport default configureStore;","map":{"version":3,"sources":["/Users/ninew/hostel_management/src/store/configstore.js"],"names":["createStore","applyMiddleware","composeWithDevTools","configureStore","initialState","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;;AAGA,SAASC,cAAT,CAAwBC,YAAxB,EAAsC;AACpC,QAAMC,UAAU,GAAG,EAAnB;AAEA,QAAMC,KAAK,GAAGN,WAAW,CAEvBI,YAFuB,EAGvBF,mBAAmB,CAACD,eAAe,CAAC,GAAGI,UAAJ,CAAhB,CAHI,CAAzB;AAMA,SAAOC,KAAP;AACD;;AAED,eAAeH,cAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\n\nfunction configureStore(initialState) {\n  const middleware = []\n\n  const store = createStore(\n\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware)),\n  )\n\n  return store\n}\n\nexport default configureStore"]},"metadata":{},"sourceType":"module"}