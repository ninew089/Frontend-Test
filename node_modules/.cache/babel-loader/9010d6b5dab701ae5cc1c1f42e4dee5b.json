{"ast":null,"code":"import axios from 'axios';\nconst LOAD_LOGIN_REQUEST = 'hostel_management/src/login/LOAD_LOGIN_REQUEST';\nconst LOAD_LOGIN_SUCCESS = 'hostel_management/src/login/LOAD_LOGIN_SUCCESS';\nconst LOAD_LOGIN_FAILURE = 'hostel_management/src/login/LOAD_LOGIN_REQUEST';\nconst LOGIN_CHECK = 'hostel_management/src/login/LOGIN_CHECK';\nconst SET_LOGIN = 'hostel_management/src/login/SET_LOGIN';\n\nfunction loadLogin(loginInfo) {\n  return async dispatch => {\n    dispatch({\n      type: LOAD_LOGIN_REQUEST\n    });\n\n    try {\n      const {\n        data\n      } = await axios.post(`https://8a2fc1a9-0d10-4a86-8098-56ddb92a968a.mock.pstmn.io/book/${loginInfo.email}&&${loginInfo.password}`);\n      dispatch({\n        type: LOAD_LOGIN_SUCCESS,\n        payload: {\n          token: data\n        }\n      });\n      dispatch({\n        type: SET_LOGIN,\n        payload: {\n          login: true\n        }\n      });\n    } catch (err) {\n      dispatch({\n        type: LOAD_LOGIN_FAILURE\n      });\n    }\n  };\n}\n\nfunction setLogin(login) {\n  return {\n    type: SET_LOGIN,\n    payload: {\n      login\n    }\n  };\n}\n\nexport { LOAD_LOGIN_REQUEST, LOAD_LOGIN_SUCCESS, LOAD_LOGIN_FAILURE, LOGIN_CHECK, SET_LOGIN, loadLogin, setLogin };","map":{"version":3,"sources":["/Users/ninew/hostel_management/src/modules/login/action.js"],"names":["axios","LOAD_LOGIN_REQUEST","LOAD_LOGIN_SUCCESS","LOAD_LOGIN_FAILURE","LOGIN_CHECK","SET_LOGIN","loadLogin","loginInfo","dispatch","type","data","post","email","password","payload","token","login","err","setLogin"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,kBAAkB,GAAG,gDAA3B;AACA,MAAMC,kBAAkB,GAAG,gDAA3B;AACA,MAAMC,kBAAkB,GAAG,gDAA3B;AACA,MAAMC,WAAW,GAAG,yCAApB;AACA,MAAMC,SAAS,GAAG,uCAAlB;;AAEA,SAASC,SAAT,CAAmBC,SAAnB,EAA8B;AAC5B,SAAO,MAAOC,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAR;;AACA,QAAI;AACF,YAAM;AAAES,QAAAA;AAAF,UAAW,MAAMV,KAAK,CAACW,IAAN,CAAY,mEAAkEJ,SAAS,CAACK,KAAM,KAAIL,SAAS,CAACM,QAAS,EAArH,CAAvB;AACAL,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEP,kBADC;AAEPY,QAAAA,OAAO,EAAE;AACPC,UAAAA,KAAK,EAAEL;AADA;AAFF,OAAD,CAAR;AAMAF,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEJ,SAAR;AAAqBS,QAAAA,OAAO,EAAE;AACrCE,UAAAA,KAAK,EAAC;AAD+B;AAA9B,OAAD,CAAR;AAGD,KAXD,CAWE,OAAOC,GAAP,EAAY;AACZT,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEN;AAAR,OAAD,CAAR;AACD;AACF,GAhBD;AAiBD;;AAID,SAASe,QAAT,CAAkBF,KAAlB,EAAyB;AACvB,SAAO;AACLP,IAAAA,IAAI,EAAEJ,SADD;AAELS,IAAAA,OAAO,EAAE;AACPE,MAAAA;AADO;AAFJ,GAAP;AAMD;;AAED,SACEf,kBADF,EAEEC,kBAFF,EAGEC,kBAHF,EAIEC,WAJF,EAKEC,SALF,EAMEC,SANF,EAOEY,QAPF","sourcesContent":["import axios from 'axios'\n\nconst LOAD_LOGIN_REQUEST = 'hostel_management/src/login/LOAD_LOGIN_REQUEST'\nconst LOAD_LOGIN_SUCCESS = 'hostel_management/src/login/LOAD_LOGIN_SUCCESS'\nconst LOAD_LOGIN_FAILURE = 'hostel_management/src/login/LOAD_LOGIN_REQUEST'\nconst LOGIN_CHECK = 'hostel_management/src/login/LOGIN_CHECK'\nconst SET_LOGIN = 'hostel_management/src/login/SET_LOGIN'\n\nfunction loadLogin(loginInfo) {\n  return async (dispatch) => {\n    dispatch({ type: LOAD_LOGIN_REQUEST })\n    try {\n      const { data } = await axios.post(`https://8a2fc1a9-0d10-4a86-8098-56ddb92a968a.mock.pstmn.io/book/${loginInfo.email}&&${loginInfo.password}`)\n      dispatch({\n        type: LOAD_LOGIN_SUCCESS,\n        payload: {\n          token: data,\n        },\n      })\n      dispatch({ type: SET_LOGIN ,  payload: {\n        login:true,\n      },})\n    } catch (err) {\n      dispatch({ type: LOAD_LOGIN_FAILURE })\n    }\n  }\n}\n\n\n\nfunction setLogin(login) {\n  return {\n    type: SET_LOGIN,\n    payload: {\n      login,\n    },\n  }\n}\n\nexport {\n  LOAD_LOGIN_REQUEST,\n  LOAD_LOGIN_SUCCESS,\n  LOAD_LOGIN_FAILURE,\n  LOGIN_CHECK,\n  SET_LOGIN,\n  loadLogin,\n  setLogin,\n}\n"]},"metadata":{},"sourceType":"module"}