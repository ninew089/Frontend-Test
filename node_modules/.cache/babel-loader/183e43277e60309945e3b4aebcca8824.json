{"ast":null,"code":"import axios from 'axios';\nconst LOAD_LOGIN_REQUEST = 'learning-portal/src/ui/LOAD_LOGIN_REQUEST';\nconst LOAD_LOGIN_SUCCESS = 'learning-portal/src/ui/LOAD_LOGIN_SUCCESS';\nconst LOAD_LOGIN_FAILURE = 'learning-portal/src/ui/LOAD_LOGIN_REQUEST';\nconst LOGIN_CHECK = 'learning-portal/src/ui/LOGIN_CHECK';\nconst SET_LOGIN = 'learning-portal/src/ui/SET_LOGIN';\n\nfunction loadLogin(user) {\n  return async dispatch => {\n    dispatch({\n      type: LOAD_LOGIN_REQUEST\n    });\n\n    try {\n      const {\n        data\n      } = await axios.post(`/login/${user.id}`);\n      dispatch({\n        type: LOAD_LOGIN_SUCCESS,\n        payload: {\n          user: data\n        }\n      });\n    } catch (err) {\n      dispatch({\n        type: LOAD_LOGIN_FAILURE\n      });\n    }\n  };\n}\n\nfunction toggleLogin(event) {\n  return {\n    type: LOGIN_CHECK\n  };\n}\n\nfunction setLogin(login) {\n  return {\n    type: SET_LOGIN,\n    payload: {\n      login\n    }\n  };\n}\n\nexport { LOAD_LOGIN_REQUEST, LOAD_LOGIN_SUCCESS, LOAD_LOGIN_FAILURE, LOGIN_CHECK, SET_LOGIN, loadLogin, toggleLogin, setLogin };","map":{"version":3,"sources":["/Users/ninew/hostel_management/src/modules/login/action.js"],"names":["axios","LOAD_LOGIN_REQUEST","LOAD_LOGIN_SUCCESS","LOAD_LOGIN_FAILURE","LOGIN_CHECK","SET_LOGIN","loadLogin","user","dispatch","type","data","post","id","payload","err","toggleLogin","event","setLogin","login"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,kBAAkB,GAAG,2CAA3B;AACA,MAAMC,kBAAkB,GAAG,2CAA3B;AACA,MAAMC,kBAAkB,GAAG,2CAA3B;AACA,MAAMC,WAAW,GAAG,oCAApB;AACA,MAAMC,SAAS,GAAG,kCAAlB;;AAEA,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,SAAO,MAAOC,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAR;;AACA,QAAI;AACF,YAAM;AAAES,QAAAA;AAAF,UAAW,MAAMV,KAAK,CAACW,IAAN,CAAY,UAASJ,IAAI,CAACK,EAAG,EAA7B,CAAvB;AACAJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEP,kBADC;AAEPW,QAAAA,OAAO,EAAE;AACPN,UAAAA,IAAI,EAAEG;AADC;AAFF,OAAD,CAAR;AAMD,KARD,CAQE,OAAOI,GAAP,EAAY;AACZN,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEN;AAAR,OAAD,CAAR;AACD;AACF,GAbD;AAcD;;AAED,SAASY,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,SAAO;AACLP,IAAAA,IAAI,EAAEL;AADD,GAAP;AAGD;;AAED,SAASa,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,SAAO;AACLT,IAAAA,IAAI,EAAEJ,SADD;AAELQ,IAAAA,OAAO,EAAE;AACPK,MAAAA;AADO;AAFJ,GAAP;AAMD;;AAED,SACEjB,kBADF,EAEEC,kBAFF,EAGEC,kBAHF,EAIEC,WAJF,EAKEC,SALF,EAMEC,SANF,EAOES,WAPF,EAQEE,QARF","sourcesContent":["import axios from 'axios'\n\nconst LOAD_LOGIN_REQUEST = 'learning-portal/src/ui/LOAD_LOGIN_REQUEST'\nconst LOAD_LOGIN_SUCCESS = 'learning-portal/src/ui/LOAD_LOGIN_SUCCESS'\nconst LOAD_LOGIN_FAILURE = 'learning-portal/src/ui/LOAD_LOGIN_REQUEST'\nconst LOGIN_CHECK = 'learning-portal/src/ui/LOGIN_CHECK'\nconst SET_LOGIN = 'learning-portal/src/ui/SET_LOGIN'\n\nfunction loadLogin(user) {\n  return async (dispatch) => {\n    dispatch({ type: LOAD_LOGIN_REQUEST })\n    try {\n      const { data } = await axios.post(`/login/${user.id}`)\n      dispatch({\n        type: LOAD_LOGIN_SUCCESS,\n        payload: {\n          user: data,\n        },\n      })\n    } catch (err) {\n      dispatch({ type: LOAD_LOGIN_FAILURE })\n    }\n  }\n}\n\nfunction toggleLogin(event) {\n  return {\n    type: LOGIN_CHECK,\n  }\n}\n\nfunction setLogin(login) {\n  return {\n    type: SET_LOGIN,\n    payload: {\n      login,\n    },\n  }\n}\n\nexport {\n  LOAD_LOGIN_REQUEST,\n  LOAD_LOGIN_SUCCESS,\n  LOAD_LOGIN_FAILURE,\n  LOGIN_CHECK,\n  SET_LOGIN,\n  loadLogin,\n  toggleLogin,\n  setLogin,\n}\n"]},"metadata":{},"sourceType":"module"}