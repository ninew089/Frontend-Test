{"ast":null,"code":"import axios from 'axios';\nconst ADD_TO_CART = 'app/cart/ADD_TO_CART';\nconst REMOVE_FROM_CART = 'app/cart/REMOVE_FROM_CART';\nconst CHECKOUT_SUCCESS = 'app/cart/CHECKOUT_SUCCESS';\n\nfunction addToCart(productId) {\n  return dispatch => {\n    dispatch({\n      type: ADD_TO_CART,\n      payload: {\n        productId\n      }\n    });\n  };\n}\n\nfunction loadCart() {\n  return (dispatch, getState) => {\n    const {\n      cart: {\n        productIds\n      }\n    } = getState();\n\n    if (productIds.length === 0) {\n      return dispatch(productActions.clearProducts());\n    }\n\n    const query = productIds.map(id => `id=${id}`).join('&');\n    dispatch(productActions.loadProducts(`?${query}`));\n  };\n}\n\nfunction removeFromCart(productId) {\n  return dispatch => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      payload: {\n        productId\n      }\n    });\n    dispatch(loadCart());\n  };\n}\n\nfunction checkout(deliveryInfo) {\n  return async (dispatch, getState) => {\n    const {\n      cart: {\n        productIds,\n        price\n      }\n    } = getState();\n    const {\n      data\n    } = await axios.post('/orders', {\n      deliveryInfo,\n      productIds,\n      price\n    });\n    dispatch({\n      type: CHECKOUT_SUCCESS,\n      payload: {\n        order: data\n      }\n    });\n    dispatch(uiActions.setFlashMessage('Your order has been placed'));\n  };\n}\n\nexport { ADD_TO_CART, REMOVE_FROM_CART, CHECKOUT_SUCCESS, addToCart, loadCart, removeFromCart, checkout };","map":{"version":3,"sources":["/Users/ninew/hostel_management/src/modules/hostel/action.js"],"names":["axios","ADD_TO_CART","REMOVE_FROM_CART","CHECKOUT_SUCCESS","addToCart","productId","dispatch","type","payload","loadCart","getState","cart","productIds","length","productActions","clearProducts","query","map","id","join","loadProducts","removeFromCart","checkout","deliveryInfo","price","data","post","order","uiActions","setFlashMessage"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,MAAMC,WAAW,GAAG,sBAApB;AACA,MAAMC,gBAAgB,GAAG,2BAAzB;AACA,MAAMC,gBAAgB,GAAG,2BAAzB;;AAEA,SAASC,SAAT,CAAmBC,SAAnB,EAA8B;AAC5B,SAAQC,QAAD,IAAc;AAEnBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,WADC;AAEPO,MAAAA,OAAO,EAAE;AACPH,QAAAA;AADO;AAFF,KAAD,CAAR;AAMD,GARD;AASD;;AAED,SAASI,QAAT,GAAoB;AAClB,SAAO,CAACH,QAAD,EAAWI,QAAX,KAAwB;AAC7B,UAAM;AACJC,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AADF,QAEFF,QAAQ,EAFZ;;AAIA,QAAIE,UAAU,CAACC,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,aAAOP,QAAQ,CAACQ,cAAc,CAACC,aAAf,EAAD,CAAf;AACD;;AAED,UAAMC,KAAK,GAAGJ,UAAU,CAACK,GAAX,CAAgBC,EAAD,IAAS,MAAKA,EAAG,EAAhC,EAAmCC,IAAnC,CAAwC,GAAxC,CAAd;AAEAb,IAAAA,QAAQ,CAACQ,cAAc,CAACM,YAAf,CAA6B,IAAGJ,KAAM,EAAtC,CAAD,CAAR;AACD,GAZD;AAaD;;AAED,SAASK,cAAT,CAAwBhB,SAAxB,EAAmC;AACjC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,gBADC;AAEPM,MAAAA,OAAO,EAAE;AACPH,QAAAA;AADO;AAFF,KAAD,CAAR;AAMAC,IAAAA,QAAQ,CAACG,QAAQ,EAAT,CAAR;AACD,GARD;AASD;;AAED,SAASa,QAAT,CAAkBC,YAAlB,EAAgC;AAC9B,SAAO,OAAOjB,QAAP,EAAiBI,QAAjB,KAA8B;AACnC,UAAM;AACJC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,UAAF;AAAcY,QAAAA;AAAd;AADF,QAEFd,QAAQ,EAFZ;AAIA,UAAM;AAAEe,MAAAA;AAAF,QAAW,MAAMzB,KAAK,CAAC0B,IAAN,CAAW,SAAX,EAAsB;AAC3CH,MAAAA,YAD2C;AAE3CX,MAAAA,UAF2C;AAG3CY,MAAAA;AAH2C,KAAtB,CAAvB;AAMAlB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,gBAAR;AAA0BK,MAAAA,OAAO,EAAE;AAAEmB,QAAAA,KAAK,EAAEF;AAAT;AAAnC,KAAD,CAAR;AACAnB,IAAAA,QAAQ,CAACsB,SAAS,CAACC,eAAV,CAA0B,4BAA1B,CAAD,CAAR;AACD,GAbD;AAcD;;AAED,SACE5B,WADF,EAEEC,gBAFF,EAGEC,gBAHF,EAIEC,SAJF,EAKEK,QALF,EAMEY,cANF,EAOEC,QAPF","sourcesContent":["import axios from 'axios'\n\n\n\nconst ADD_TO_CART = 'app/cart/ADD_TO_CART'\nconst REMOVE_FROM_CART = 'app/cart/REMOVE_FROM_CART'\nconst CHECKOUT_SUCCESS = 'app/cart/CHECKOUT_SUCCESS'\n\nfunction addToCart(productId) {\n  return (dispatch) => {\n\n    dispatch({\n      type: ADD_TO_CART,\n      payload: {\n        productId,\n      },\n    })\n  }\n}\n\nfunction loadCart() {\n  return (dispatch, getState) => {\n    const {\n      cart: { productIds },\n    } = getState()\n\n    if (productIds.length === 0) {\n      return dispatch(productActions.clearProducts())\n    }\n\n    const query = productIds.map((id) => `id=${id}`).join('&')\n\n    dispatch(productActions.loadProducts(`?${query}`))\n  }\n}\n\nfunction removeFromCart(productId) {\n  return (dispatch) => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      payload: {\n        productId,\n      },\n    })\n    dispatch(loadCart())\n  }\n}\n\nfunction checkout(deliveryInfo) {\n  return async (dispatch, getState) => {\n    const {\n      cart: { productIds, price },\n    } = getState()\n\n    const { data } = await axios.post('/orders', {\n      deliveryInfo,\n      productIds,\n      price,\n    })\n\n    dispatch({ type: CHECKOUT_SUCCESS, payload: { order: data } })\n    dispatch(uiActions.setFlashMessage('Your order has been placed'))\n  }\n}\n\nexport {\n  ADD_TO_CART,\n  REMOVE_FROM_CART,\n  CHECKOUT_SUCCESS,\n  addToCart,\n  loadCart,\n  removeFromCart,\n  checkout,\n}\n"]},"metadata":{},"sourceType":"module"}